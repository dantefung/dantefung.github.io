[{"title":"如何介绍项目？","url":"http://dantefung.com/2018/05/27/如何介绍项目/","content":"<p>#成长#   如何介绍项目</p>\n<p>面试官问这个问题，主要是考察你的概述能力和全局视野。当然，今天我们聊的并不是面试题，而是我们怎么去理解和复盘我们每天做的事情。有的人经常抱怨自己每天在堆业务，但没有成长。事实上，很多情况下确实在堆业务，但并不是没有成长的。并非做中间件或者技术架构才是成长，例如我们的需求分析能力，沟通协作能力，产品思维能力，抽象建模能力等都是一个非常重要的硬实力。首先，请你静下来思考，你真的了解自己每天在做的事情吗，你真的了解自己所做的业务吗？</p>\n<p>好的，现在进入正文，我们如何理解和复盘项目。这里，列了一个清单，请大家好好思考下这些内容。</p>\n<ol>\n<li>明确项目的周期。</li>\n<li>明确项目的价值。（为什么做这个项目，它解决了用户什么痛点，它带来什么价值？）</li>\n<li>明确项目的功能。（这个项目涉及哪些功能？）</li>\n<li>明确项目的技术。（这个项目用到哪些技术？）</li>\n<li>明确个人在项目中的位置和作用。（你在这个项目的承担角色？）</li>\n<li>明确项目的整体架构。</li>\n<li>明确项目的优缺点,如果重新设计你会如何设计。</li>\n<li>明确项目的亮点。（这个项目有什么亮点？）</li>\n<li>明确技术成长。（你通过这个项目有哪些技术成长？）</li>\n</ol>\n","categories":[],"tags":[]},{"title":"Hello World","url":"http://dantefung.com/2018/04/04/hello-world/","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n","categories":[],"tags":[]},{"title":"VUE笔记","url":"http://dantefung.com/2018/03/26/vue/","content":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/*</span><br><span class=\"line\">\t              ,,))))))));,</span><br><span class=\"line\">\t           __)))))))))))))),</span><br><span class=\"line\">\t\\|/       -\\(((((&apos;&apos;&apos;&apos;((((((((.</span><br><span class=\"line\">\t-*-==//////((&apos;&apos;  .     `)))))),</span><br><span class=\"line\">\t/|\\      ))| o    ;-.    &apos;(((((                                  ,(,</span><br><span class=\"line\">\t         ( `|    /  )    ;))))&apos;                               ,_))^;(~</span><br><span class=\"line\">\t            |   |   |   ,))((((_     _____------~~~-.        %,;(;(&gt;&apos;;&apos;~</span><br><span class=\"line\">\t            o_);   ;    )))(((` ~---~  `::           \\      %%~~)(v;(`(&apos;~</span><br><span class=\"line\">\t                  ;    &apos;&apos;&apos;&apos;````         `:       `:::|\\,__,%%    );`&apos;; ~</span><br><span class=\"line\">\t                 |   _                )     /      `:|`----&apos;     `-&apos;</span><br><span class=\"line\">\t           ______/\\/~    |                 /        /</span><br><span class=\"line\">\t         /~;;.____/;;&apos;  /          ___--,-(   `;;;/</span><br><span class=\"line\">\t        / //  _;______;&apos;------~~~~~    /;;/\\    /</span><br><span class=\"line\">\t       //  | |                        / ;   \\;;,\\</span><br><span class=\"line\">\t      (&lt;_  | ;                      /&apos;,/-----&apos;  _&gt;</span><br><span class=\"line\">\t       \\_| ||_                     //~;~~~~~~~~~</span><br><span class=\"line\">\t           `\\_|                   (,~~</span><br><span class=\"line\">\t                                   \\~\\</span><br><span class=\"line\">\t                                    ~~</span><br><span class=\"line\">\t*/</span><br></pre></td></tr></table></figure>\n<h3 id=\"创建项目\"><a href=\"#创建项目\" class=\"headerlink\" title=\"创建项目\"></a>创建项目</h3><p>1、打开终端，键入命令</p>\n<blockquote>\n<p>npm init -y</p>\n</blockquote>\n<p>该命令可以初始化一个项目<strong>描述文件</strong>package.json文件</p>\n<p><img src=\"../img/image-201803242220306.png\" alt=\"mage-20180324222030\"></p>\n<blockquote>\n<p>cnpm install vue  –save</p>\n</blockquote>\n<p>默认就会安装最新版本</p>\n<p><img src=\"../img/image-201803242220510.png\" alt=\"mage-20180324222051\"></p>\n<h3 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h3><p><code>1、如果环境遇到“cnpm：command not found”</code></p>\n<p>问题是因为你没有安装淘宝的镜像,在终端键入如下命令即可:</p>\n<blockquote>\n<p>npm install cnpm -g –registry=<a href=\"https://registry.npm.taobao.org\" target=\"_blank\" rel=\"noopener\">https://registry.npm.taobao.org</a></p>\n</blockquote>\n<p><img src=\"../img/image-201803242221120.png\" alt=\"mage-20180324222112\"></p>\n","categories":[],"tags":[]},{"title":"npm笔记","url":"http://dantefung.com/2018/03/26/npm/","content":"<h1 id=\"1-npm\"><a href=\"#1-npm\" class=\"headerlink\" title=\"1. npm\"></a>1. npm</h1><h2 id=\"1-1-什么是npm\"><a href=\"#1-1-什么是npm\" class=\"headerlink\" title=\"1.1. 什么是npm\"></a>1.1. 什么是npm</h2><h3 id=\"1-1-1-npm简介\"><a href=\"#1-1-1-npm简介\" class=\"headerlink\" title=\"1.1.1. npm简介\"></a>1.1.1. npm简介</h3><p><strong>npm官网</strong></p>\n<p>npm是node package manager的简称，即node应用程序专属的包管理工具<br>也就是说npm最初只负责维护node服务端开发所需的js包<br>不过随着node的普及，npm也越来越流行，npm也可以用来管理前端所需的包了，如jquery、bootstrap、vue等</p>\n<h4 id=\"1-1-1-1-npm与包管理工具\"><a href=\"#1-1-1-1-npm与包管理工具\" class=\"headerlink\" title=\"1.1.1.1. npm与包管理工具\"></a>1.1.1.1. npm与包管理工具</h4><p>在进行项目开发中，我们经常需要”引入”、”更新”、”删除”一些由我们自己开发或第三方开发的独立文件模块或包<br>比较传统的做法是开发人员随着自己的经验，逐渐维护起一个专属与自己的目录，用来管理将来开发可能用到的包<br>这个目录久而久之会越来越大，我们需要更新新版本以淘汰旧版本的包的频率也越来月频繁，浪费了我们的部分精力<br>包管理工具就是专门解决这类问题的软件，而npm就是包管理工具的一种，专门用来管理node.js与前端开发所需的包</p>\n<h4 id=\"1-1-1-2-安装与更新\"><a href=\"#1-1-1-2-安装与更新\" class=\"headerlink\" title=\"1.1.1.2. 安装与更新\"></a>1.1.1.2. 安装与更新</h4><p>只要安装了node，那么npm就跟着安装了<br>可以运行命令npm install -g npm来升级npm到最新版本<br>不过需要注意，如果你没有采用默认的安装路径或者没有管理员权限最好不要升级<br>因为升级后可能丢失npm的使用权限，到时候就得重装node来解决了</p>\n<h2 id=\"1-2-使用\"><a href=\"#1-2-使用\" class=\"headerlink\" title=\"1.2. 使用\"></a>1.2. 使用</h2><h3 id=\"1-2-1-基本使用\"><a href=\"#1-2-1-基本使用\" class=\"headerlink\" title=\"1.2.1. 基本使用\"></a>1.2.1. 基本使用</h3><p>以命令行方式进入一个项目目录<br>创建项目描述文件（已经有了就不用了）<br>运行npm init，运行后项目中会创建一个package.json的项目描述文件<br>也可以纯手动的方式创建package.json文件<br>使用npm安装项目依赖包 +npm install jquery bootstrap –save<br>运行后项目中会创建一个node_modules文件夹<br>打开该文件夹会发现jquery与bootstrap的最新版已经被下载<br>接下来就可以在项目引用第三方包进行开发了</p>\n<h4 id=\"1-2-1-1-项目共享\"><a href=\"#1-2-1-1-项目共享\" class=\"headerlink\" title=\"1.2.1.1. 项目共享\"></a>1.2.1.1. 项目共享</h4><p>通常一个项目是由多个人一起维护的，如果是一个比较大的项目，还会有很多依赖的包<br>像这样的项目如果在多个人之间传播共享很不便利，主要是因为依赖包占用的空间太大<br>如果使用了npm，我们就不需要把那些依赖包传来传去了，因为package.json文件中记录了这些依赖<br>应用演示<br>创建一个使用npm进行包管理的项目<br>然后把这个目录中除node_modules外的内容传给另一个人，这样项目就会比较轻巧<br>另一个人拿到项目后，只需运行<figure class=\"highlight plain\"><figcaption><span>install````命令安装依赖后，项目即可恢复原样</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">#### 1.2.1.2. 配合git</span><br><span class=\"line\"></span><br><span class=\"line\">现代项目除了会使用一款包管理工具管理依赖包之外，还会使用一款版本管理工具进行代码版本的管理</span><br><span class=\"line\">所以这里也补充说明一下npm与git的结合使用</span><br><span class=\"line\">使用了npm后项目的依赖包就被安装到了node_modules目录</span><br><span class=\"line\">这个目录的代码因为比较庞大，所以通常不会添加到版本仓库中</span><br><span class=\"line\">所以通常会在.gitignore配置文件中，配置忽略node_modules</span><br><span class=\"line\">配置后项目代码就可以提交到git仓库进行管理了</span><br><span class=\"line\">将来其他账户要clone项目并运行，clone后依然运行npm install即可安装依赖恢复项目原样</span><br><span class=\"line\"></span><br><span class=\"line\">## 1.3. 命令汇总</span><br><span class=\"line\"></span><br><span class=\"line\">### 1.3.1. 必用命令</span><br><span class=\"line\"></span><br><span class=\"line\">&gt; npm init</span><br><span class=\"line\"></span><br><span class=\"line\">可以添加-y参数跳过配置信息的填写，直接生成默认的package.json文件</span><br><span class=\"line\">npm install 包名@版本号</span><br><span class=\"line\">````--save || -S参数可以把安装信息记录在package.json文件中的dependencies属性中</span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight plain\"><figcaption><span>|| -D参数可以把安装信息记录在package.json文件中的devDependencies属性中````</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">````--production参数让npm根据配置文件中的dependencies属性进行依赖包的安装</span><br></pre></td></tr></table></figure>\n<p><code>-g参数可以在全局进行安装，一般全局安装的都是一些可单独执行的node工具</code><br>–registry参数可以指定下载包的地址，可以使用淘宝提供的地址<a href=\"https://registry.npm.taobao.org\" target=\"_blank\" rel=\"noopener\">https://registry.npm.taobao.org</a><br>npm uninstall 包名<br>–save || -S参数会删除package.json文件中dependencies的依赖信息<br>–save-dev || -D参数会删除package.json文件中devDependencies的依赖信息<br>-g参数指明删除全局的包</p>\n<h4 id=\"1-3-1-1-其他命令\"><a href=\"#1-3-1-1-其他命令\" class=\"headerlink\" title=\"1.3.1.1. 其他命令\"></a>1.3.1.1. 其他命令</h4><p>npm update 更新模块<br>npm outdated 检查模块是否已经过时<br>npm ls 查看安装的模块<br>npm init 在项目中引导创建一个package.json文件<br>npm help 查看某条命令的详细帮助<br>npm root 查看包的安装路径<br>npm config 管理npm的配置路径<br>npm cache 管理模块的缓存<br>npm start 启动模块<br>npm stop 停止模块<br>npm restart 重新启动模块<br>npm test 测试模块<br>npm version 查看模块版本<br>npm view 查看模块的注册信息<br>npm adduser<br>npm publish 发布模块<br>npm access 在发布的包上设置访问级别<br>npm package.json的语法</p>\n<h2 id=\"1-4-cnpm\"><a href=\"#1-4-cnpm\" class=\"headerlink\" title=\"1.4. cnpm\"></a>1.4. cnpm</h2><h3 id=\"1-4-1-简介\"><a href=\"#1-4-1-简介\" class=\"headerlink\" title=\"1.4.1. 简介\"></a>1.4.1. 简介</h3><p>淘宝NPM镜像官网</p>\n<h4 id=\"1-4-1-1-安装\"><a href=\"#1-4-1-1-安装\" class=\"headerlink\" title=\"1.4.1.1. 安装\"></a>1.4.1.1. 安装</h4><p>npm install -g cnpm –registry <a href=\"https://registry.npm.taobao.org\" target=\"_blank\" rel=\"noopener\">https://registry.npm.taobao.org</a></p>\n<h4 id=\"1-4-1-2-使用\"><a href=\"#1-4-1-2-使用\" class=\"headerlink\" title=\"1.4.1.2. 使用\"></a>1.4.1.2. 使用</h4><p>与npm的使用方式一样，本就是对npm的一层封装<br>使用范例：cnpm install jquery art-template -S</p>\n<h4 id=\"1-4-1-3-其他相关工具\"><a href=\"#1-4-1-3-其他相关工具\" class=\"headerlink\" title=\"1.4.1.3. 其他相关工具\"></a>1.4.1.3. 其他相关工具</h4><p>bower<br>twitter推出的一款包管理工具。<br>参考文档[<a href=\"http://www.zuojj.com/archives/533.html]\" target=\"_blank\" rel=\"noopener\">http://www.zuojj.com/archives/533.html]</a><br>yarn<br>facebook推出的包管理工具。<br>参考文档[<a href=\"http://imweb.io/topic/581f6c0bf2e7e042172d618a]\" target=\"_blank\" rel=\"noopener\">http://imweb.io/topic/581f6c0bf2e7e042172d618a]</a></p>\n","categories":[],"tags":[]},{"title":"mongoDB","url":"http://dantefung.com/2018/03/26/mogodb/","content":"<h2 id=\"typora-copy-images-to-img\"><a href=\"#typora-copy-images-to-img\" class=\"headerlink\" title=\"typora-copy-images-to: ../img\"></a>typora-copy-images-to: ../img</h2><h1 id=\"1-mongoDB\"><a href=\"#1-mongoDB\" class=\"headerlink\" title=\"1. mongoDB\"></a>1. mongoDB</h1><h2 id=\"1-1-简介\"><a href=\"#1-1-简介\" class=\"headerlink\" title=\"1.1. 简介\"></a>1.1. 简介</h2><h3 id=\"1-1-1-作用\"><a href=\"#1-1-1-作用\" class=\"headerlink\" title=\"1.1.1. 作用\"></a>1.1.1. 作用</h3><p>用来管理数据的软件<br>可自动对数据有组织的存放<br>提供相应的增删查改接口方便对数据进行操作<br>支持众多语言进行连接操作<br>提供一系列措施提高数据处理的性能</p>\n<h4 id=\"1-1-1-1-特点\"><a href=\"#1-1-1-1-特点\" class=\"headerlink\" title=\"1.1.1.1. 特点\"></a>1.1.1.1. 特点</h4><p>增删查改不支持sql语句<br>没有表结构<br>使用简单方便性能优越</p>\n<h4 id=\"1-1-1-2-官网与资源\"><a href=\"#1-1-1-2-官网与资源\" class=\"headerlink\" title=\"1.1.1.2. 官网与资源\"></a>1.1.1.2. 官网与资源</h4><p>MongoDB官网<br>菜鸟中文文档</p>\n<h2 id=\"1-2-安装\"><a href=\"#1-2-安装\" class=\"headerlink\" title=\"1.2. 安装\"></a>1.2. 安装</h2><h3 id=\"windows-用户\"><a href=\"#windows-用户\" class=\"headerlink\" title=\"windows 用户\"></a>windows 用户</h3><h3 id=\"1-2-1-注意事项\"><a href=\"#1-2-1-注意事项\" class=\"headerlink\" title=\"1.2.1. 注意事项\"></a>1.2.1. 注意事项</h3><p>安装路径不要出现中文<br>mongoDB最新版已不再支持32位windows操作系统<br>这里有以前的32位安装包，但是官方已经不提供下载链接了<br>mongoDB在低版本win7和win8存在不兼容问题可能存在各种问题<br>要么升级win7安装所有的更新<br>要么更换为win10</p>\n<h4 id=\"1-2-1-1-安装检测\"><a href=\"#1-2-1-1-安装检测\" class=\"headerlink\" title=\"1.2.1.1. 安装检测\"></a>1.2.1.1. 安装检测</h4><p>安装完毕后命令行运行mongo –version<br>如果打印出相应的版本号那么就成功了<br>如果没有打印相关的版本号那么做如下操作<br>查看目录完整性，默认安装的路径C:\\Program Files\\MongoDB\\Server\\3.4\\bin<br>bin目录下内容<br>如果内容没有问题接下来把这个bin路径配置到环境变量中</p>\n<h4 id=\"1-2-1-2-环境变量配置\"><a href=\"#1-2-1-2-环境变量配置\" class=\"headerlink\" title=\"1.2.1.2. 环境变量配置\"></a>1.2.1.2. 环境变量配置</h4><p>在桌面或者资源管理器中右键此电脑，选择属性进入系统面板<br>点击高级系统设置弹出相应设置框<br>点击环境变量弹出相应设置框<br>在系统变量中找到Path变量<br>选择Path变量，然后点击编辑按钮弹出编辑框<br>点击新建把mongo的bin路径赋值进入即可<br>配置完毕后打开新的命令行工具输入mongo –version进行检测</p>\n<h3 id=\"Mac-OS-x-用户\"><a href=\"#Mac-OS-x-用户\" class=\"headerlink\" title=\"Mac OS x 用户\"></a>Mac OS x 用户</h3><p><code>注:以下说明摘录自官网，为保证原汁原味，不做翻译。</code></p>\n<h2 id=\"Install-MongoDB-Community-Edition\"><a href=\"#Install-MongoDB-Community-Edition\" class=\"headerlink\" title=\"Install MongoDB Community Edition\"></a>Install MongoDB Community Edition</h2><blockquote>\n<p><code>NOTE</code>:</p>\n</blockquote>\n<blockquote>\n<p>To install a different version of MongoDB, please refer to that version’s documentation. For example, see version <a href=\"https://docs.mongodb.com/v3.4/tutorial/install-mongodb-on-os-x/\" target=\"_blank\" rel=\"noopener\">3.4</a>.</p>\n</blockquote>\n<h3 id=\"Install-MongoDB-Community-Edition-Manually\"><a href=\"#Install-MongoDB-Community-Edition-Manually\" class=\"headerlink\" title=\"Install MongoDB Community Edition Manually\"></a>Install MongoDB Community Edition Manually</h3><h4 id=\"Download-the-binary-files-for-the-desired-release-of-MongoDB\"><a href=\"#Download-the-binary-files-for-the-desired-release-of-MongoDB\" class=\"headerlink\" title=\"Download the binary files for the desired release of MongoDB.\"></a>Download the binary files for the desired release of MongoDB.</h4><p>Download the binaries from the <a href=\"https://www.mongodb.com/download-center#production\" target=\"_blank\" rel=\"noopener\">MongoDB Download Center</a>.</p>\n<h4 id=\"Extract-the-files-from-the-downloaded-archive\"><a href=\"#Extract-the-files-from-the-downloaded-archive\" class=\"headerlink\" title=\"Extract the files from the downloaded archive.\"></a>Extract the files from the downloaded archive.</h4><p>For example, from a system shell, you can extract through the <code>tar</code> command:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar -zxvf mongodb-osx-ssl-x86_64-3.6.3.tgz</span><br></pre></td></tr></table></figure>\n<h4 id=\"Copy-the-extracted-archive-to-the-target-directory\"><a href=\"#Copy-the-extracted-archive-to-the-target-directory\" class=\"headerlink\" title=\"Copy the extracted archive to the target directory.\"></a>Copy the extracted archive to the target directory.</h4><p>Copy the extracted folder to the location from which MongoDB will run.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir -p mongodb</span><br><span class=\"line\">cp -R -n mongodb-osx-ssl-x86_64-3.6.3/ mongodb</span><br></pre></td></tr></table></figure>\n<h4 id=\"Ensure-the-location-of-the-binaries-is-in-the-PATH-variable\"><a href=\"#Ensure-the-location-of-the-binaries-is-in-the-PATH-variable\" class=\"headerlink\" title=\"Ensure the location of the binaries is in the PATH variable.\"></a>Ensure the location of the binaries is in the <code>PATH</code> variable.</h4><p>The MongoDB binaries are in the <code>bin/</code> directory of the archive. To ensure that the binaries are in your <code>PATH</code>, you can modify your <code>PATH</code>.</p>\n<p>For example, you can add the following line to your shell’s <code>rc</code> file (e.g. <code>~/.bashrc</code>):</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export PATH=&lt;mongodb-install-directory&gt;/bin:$PATH</span><br></pre></td></tr></table></figure>\n<p>Replace <code>&lt;mongodb-install-directory&gt;</code> with the path to the extracted MongoDB archive.</p>\n<p><code>注:</code></p>\n<p>Mac下面的环境变量设置和Linux差不多，一般为这几个文件（左边的先加载）：<br>/etc/profile </p>\n<p>/etc/paths</p>\n<p>~/.bash_profile </p>\n<p>~/.bash_login </p>\n<p>~/.profile </p>\n<p>~/.bashrc</p>\n<ul>\n<li>etc目录下面的是系统级的配置;</li>\n</ul>\n<ul>\n<li><p>~目录下的是用户配置，用户配置文件只会加载一个（.bashrc除外），不存在的可以自己新建；</p>\n<p>​</p>\n</li>\n</ul>\n<h2 id=\"1-3-基本概念\"><a href=\"#1-3-基本概念\" class=\"headerlink\" title=\"1.3. 基本概念\"></a>1.3. 基本概念</h2><h3 id=\"1-3-1-数据库\"><a href=\"#1-3-1-数据库\" class=\"headerlink\" title=\"1.3.1. 数据库\"></a>1.3.1. 数据库</h3><p>MongoDB可以创建多个数据库<br>一般每个数据库对应一个项目<br>也就说一个MongoDB可以同时为多个项目提供服务<br>运行show dbs命令可以查看所有的数据库列表</p>\n<h4 id=\"1-3-1-1-集合\"><a href=\"#1-3-1-1-集合\" class=\"headerlink\" title=\"1.3.1.1. 集合\"></a>1.3.1.1. 集合</h4><p>每个数据库中会有很多文件，每个文件称作集合或表（collection或table）<br>MongoDB是以JSON格式存储数据的，也就是说每个文件中存储的是多条JSON数据<br>这些数据都是特殊编码的二进制数据存储，我们无法直接打开文件查看内容</p>\n<h4 id=\"1-3-1-2-文档\"><a href=\"#1-3-1-2-文档\" class=\"headerlink\" title=\"1.3.1.2. 文档\"></a>1.3.1.2. 文档</h4><p>一个文件中，存储的每一条JSON数据，称为文档（document）<br>注意：不要把文档认为是一个文件，它代表的仅仅是集合中的一条数据</p>\n<h4 id=\"1-3-1-3-字段\"><a href=\"#1-3-1-3-字段\" class=\"headerlink\" title=\"1.3.1.3. 字段\"></a>1.3.1.3. 字段</h4><p>JSON数据中的每个属性，称为字段（field）</p>\n<h2 id=\"1-4-使用\"><a href=\"#1-4-使用\" class=\"headerlink\" title=\"1.4. 使用\"></a>1.4. 使用</h2><h3 id=\"1-4-1-启动服务\"><a href=\"#1-4-1-启动服务\" class=\"headerlink\" title=\"1.4.1. 启动服务\"></a>1.4.1. 启动服务</h3><h3 id=\"windows用户\"><a href=\"#windows用户\" class=\"headerlink\" title=\"windows用户\"></a>windows用户</h3><p>创建数据目录<br>MongoDB会将数据存储在db目录中，但是这个目录需要我们手动创建<br>在c盘根目录下创建一个data目录，再在data中创建db目录<br>db目录也可以创建在其他位置，但是c:\\data\\db是mogoDB操作的默认路径所以我们这里这样配置<br>启动服务<br>安装的bin目录下有个mongod.exeCLI应用程序，执行它即可启动服务<br>在命令行输入mongod –dbpath c:\\data\\db回车即可启动服务<br>因为c:\\data\\db是默认路径，所以这里不加–dbpath参数也可以<br>服务启动后与我们启动node_http服务一样，命令行工具会停在那里留个光标闪动<br>使用Ctrl + C即可停止服务<br>如果32位有异常，添加–journal –storageEngine=mmapv1<br>mongod –dbpath=”路径” –journal –storageEngine=mmapv1</p>\n<h4 id=\"Mac-OS-x-用户-1\"><a href=\"#Mac-OS-x-用户-1\" class=\"headerlink\" title=\"Mac OS x 用户\"></a>Mac OS x 用户</h4><p><code>注:以下说明摘录自官网，强烈建议大家学好英文，阅读英文原文，如果实在不行就用google网页翻译看也行，以下为保证原汁原味不做翻译。</code></p>\n<h3 id=\"Run-MongoDB\"><a href=\"#Run-MongoDB\" class=\"headerlink\" title=\"Run MongoDB.\"></a>Run MongoDB.</h3><p>To run MongoDB, run the <a href=\"https://docs.mongodb.com/manual/reference/program/mongod/#bin.mongod\" target=\"_blank\" rel=\"noopener\"><code>mongod</code></a> process at the system prompt. If necessary, specify the path of the <a href=\"https://docs.mongodb.com/manual/reference/program/mongod/#bin.mongod\" target=\"_blank\" rel=\"noopener\"><code>mongod</code></a> or the data directory. See the following examples.</p>\n<h4 id=\"Run-without-specifying-paths\"><a href=\"#Run-without-specifying-paths\" class=\"headerlink\" title=\"Run without specifying paths\"></a>Run without specifying paths</h4><p>If your system <code>PATH</code> variable includes the location of the <a href=\"https://docs.mongodb.com/manual/reference/program/mongod/#bin.mongod\" target=\"_blank\" rel=\"noopener\"><code>mongod</code></a> binary and if you use the default data directory (i.e., <code>/data/db</code>), simply enter <code>mongod</code> at the system prompt:</p>\n<blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; mongod</span><br><span class=\"line\">&gt;</span><br></pre></td></tr></table></figure>\n</blockquote>\n<h4 id=\"Specify-the-path-of-the-mongod¶\"><a href=\"#Specify-the-path-of-the-mongod¶\" class=\"headerlink\" title=\"Specify the path of the mongod¶\"></a>Specify the path of the <a href=\"https://docs.mongodb.com/manual/reference/program/mongod/#bin.mongod\" target=\"_blank\" rel=\"noopener\"><code>mongod</code></a><a href=\"https://docs.mongodb.com/manual/tutorial/install-mongodb-on-os-x/#specify-the-path-of-the-mongod\" target=\"_blank\" rel=\"noopener\">¶</a></h4><p>If your <code>PATH</code> does not include the location of the <a href=\"https://docs.mongodb.com/manual/reference/program/mongod/#bin.mongod\" target=\"_blank\" rel=\"noopener\"><code>mongod</code></a> binary, enter the full path to the <a href=\"https://docs.mongodb.com/manual/reference/program/mongod/#bin.mongod\" target=\"_blank\" rel=\"noopener\"><code>mongod</code></a> binary at the system prompt:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;path to binary&gt;/mongod</span><br></pre></td></tr></table></figure>\n<h4 id=\"Specify-the-path-of-the-data-directory\"><a href=\"#Specify-the-path-of-the-data-directory\" class=\"headerlink\" title=\"Specify the path of the data directory\"></a>Specify the path of the data directory</h4><p>If you do not use the default data directory (i.e., <code>/data/db</code>), specify the path to the data directory using the <a href=\"https://docs.mongodb.com/manual/reference/program/mongod/#cmdoption-mongod-dbpath\" target=\"_blank\" rel=\"noopener\"><code>--dbpath</code></a> option:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mongod --dbpath &lt;path to data directory&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"Verify-that-MongoDB-has-started-successfully\"><a href=\"#Verify-that-MongoDB-has-started-successfully\" class=\"headerlink\" title=\"Verify that MongoDB has started successfully\"></a>Verify that MongoDB has started successfully</h3><p>Verify that MongoDB has started successfully by checking the process output for the following line:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[initandlisten] waiting for connections on port 27017</span><br></pre></td></tr></table></figure>\n<p>The output should be visible in the terminal or shell window.</p>\n<p>You may see non-critical warnings in the process output. As long as you see the log line shown above, you can safely ignore these warnings during your initial evaluation of MongoDB.</p>\n<p><img src=\"../img/image-201803252036227.png\" alt=\"mage-20180325203622\"></p>\n<h4 id=\"1-4-1-1-命令行连接（使用MongoDB客户端连接）\"><a href=\"#1-4-1-1-命令行连接（使用MongoDB客户端连接）\" class=\"headerlink\" title=\"1.4.1.1. 命令行连接（使用MongoDB客户端连接）\"></a>1.4.1.1. 命令行连接（使用MongoDB客户端连接）</h4><h5 id=\"1-4-1-1-1-说明\"><a href=\"#1-4-1-1-1-说明\" class=\"headerlink\" title=\"1.4.1.1.1. 说明\"></a>1.4.1.1.1. 说明</h5><p>安装的bin目录下有个mongo.exeCLI应用程序，执行它即可连接服务<br>基本语法mongo mongodb://ip:prot/database<br>语法中后面的都是可选项，如果不输默认为mongodb://127.0.0.1:27017/test<br>使用Ctrl + C，或者执行exit命令可中断连接</p>\n<p><code>注：出自官方说明:</code></p>\n<blockquote>\n<p>Begin using MongoDB.</p>\n</blockquote>\n<blockquote>\n<p>Start a <a href=\"https://docs.mongodb.com/manual/reference/program/mongo/#bin.mongo\" target=\"_blank\" rel=\"noopener\"><code>mongo</code></a> shell on the same host machine as the <a href=\"https://docs.mongodb.com/manual/reference/program/mongod/#bin.mongod\" target=\"_blank\" rel=\"noopener\"><code>mongod</code></a>. Use the <a href=\"https://docs.mongodb.com/manual/reference/program/mongo/#cmdoption-mongo-host\" target=\"_blank\" rel=\"noopener\"><code>--host</code></a> command line option to specify the localhost address and port that the <a href=\"https://docs.mongodb.com/manual/reference/program/mongod/#bin.mongod\" target=\"_blank\" rel=\"noopener\"><code>mongod</code></a> listens on:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; mongo --host 127.0.0.1:27017</span><br><span class=\"line\">&gt;</span><br></pre></td></tr></table></figure>\n</blockquote>\n<h6 id=\"1-4-1-1-1-1-连接\"><a href=\"#1-4-1-1-1-1-连接\" class=\"headerlink\" title=\"1.4.1.1.1.1. 连接\"></a>1.4.1.1.1.1. 连接</h6><p>命令行工具中执行mongo连接默认数据库<br>使用show dbs命令查看所有数据库<br>使用use store命令切换到store数据库<br>如果当前没有这个数据库会自动创建后再切换<br>使用db命令可以查看当前所处数据库的名称<br>使用show collections命令可以查看当前数据库中的所有集合</p>\n<h6 id=\"1-4-1-1-1-2-增\"><a href=\"#1-4-1-1-1-2-增\" class=\"headerlink\" title=\"1.4.1.1.1.2. 增\"></a>1.4.1.1.1.2. 增</h6><p>基本语法：数据库.集合.insert(JSON)<br>注意：这里插入的数据不用严格遵守JSON格式也可以<br>使用db.goods.insertOne({name: ‘豪车’, time: 2015})命令给goods集合文件插入一条数据<br>如果当前没有这个集合文件会自动创建后再插入<br>使用db.goods.insertMany([{name: ‘垃圾’, time: 2015}, {name: ‘奔驰’, time: 2012}, {name: ‘宝马’, time: 2012}])命令给goods集合文件插入多条数据<br>如果当前没有这个集合文件会自动创建后再插入<br>使用show collections命令查看集合变化</p>\n<h6 id=\"1-4-1-1-1-3-查\"><a href=\"#1-4-1-1-1-3-查\" class=\"headerlink\" title=\"1.4.1.1.1.3. 查\"></a>1.4.1.1.1.3. 查</h6><p>基本语法：数据库.集合.find(条件)<br>注意：这里输入的键值必须使用引号包起来，否则查不到数据<br>补充：如果是查找多条数据，可以db.goods.find().pretty()格式化输出<br>使用db.goods.find()命令列出goods集合中的所有数据<br>使用db.goods.find({“time”: “2012”})命令找出time为2012的所有数据<br>使用db.goods.findOne({“time”: “2012”})命令找出time为2012的第一条数据<br>使用db.goods.find({“name”: /豪/})命令列出goods集合中name字段含有’豪’的数据<br>1.4.1.1.1.4. 删</p>\n<p>基本语法：数据库.集合.remove(条件, 是否只删除一条)<br>使用db.goods.remove({‘time’: ‘2015’})命令删除goods集合中time为2015的所有数据<br>使用db.goods.remove({‘time’: ‘2012’}, true)命令删除goods集合中time为2012的第一条数据<br>使用db.goods.remove()命令删除全部数据</p>\n<h6 id=\"1-4-1-1-1-5-改\"><a href=\"#1-4-1-1-1-5-改\" class=\"headerlink\" title=\"1.4.1.1.1.5. 改\"></a>1.4.1.1.1.5. 改</h6><p>基本语法：数据库.集合.update(条件, 新值, 没有匹配是否新增, 是否更新多条数据)<br>使用db.goods.update({‘time’: ‘2015’}, {‘name’: ‘玛莎拉’, ‘time’: ‘2017’})命令替换goods集合中time为2015的第一条数据<br>使用db.goods.update({‘time’: ‘2015’}, {$set: {‘time’: ‘2017’})命令替换goods集合中time为2015的第一条数据的time字段<br>1.4.1.1.1.6. save</p>\n<p>基本语法：数据库.集合.save(JSON)<br>如果数据中含有_id字段，那么update这个_id的数据<br>如果没有_id字段，那么insert该数据</p>\n<h4 id=\"1-4-1-2-node程序连接MongoDB\"><a href=\"#1-4-1-2-node程序连接MongoDB\" class=\"headerlink\" title=\"1.4.1.2. node程序连接MongoDB\"></a>1.4.1.2. node程序连接MongoDB</h4><h5 id=\"1-4-1-2-1-安装驱动包\"><a href=\"#1-4-1-2-1-安装驱动包\" class=\"headerlink\" title=\"1.4.1.2.1. 安装驱动包\"></a>1.4.1.2.1. 安装驱动包</h5><p>mongoDB支持众多编程语言来操作<br>每种编程语言官方都提供了相应的驱动包<br>在node.js中操作mongo需要安装mongodb这个包<br>使用cnpm install mongodb -S进行安装</p>\n<h6 id=\"1-4-1-2-1-1-连接\"><a href=\"#1-4-1-2-1-1-连接\" class=\"headerlink\" title=\"1.4.1.2.1.1. 连接\"></a>1.4.1.2.1.1. 连接</h6><pre><code>&apos;use strict&apos;;\nconst mongodb = require(&apos;mongodb&apos;);\nconst MongoClient = mongodb.MongoClient;    \n\n// 连接itcast数据库\nlet dbUrl = &apos;mongodb://localhost:27017/store&apos;;\nMongoClient.connect(dbUrl, (err, db) =&gt; {\n    if(!err) {\n        console.log(&apos;在这里进行数据的增删查改&apos;);\n    }else {\n        console.log(&apos;数据库连接失败&apos;);\n    }\n});\n</code></pre><h6 id=\"1-4-1-2-1-2-增\"><a href=\"#1-4-1-2-1-2-增\" class=\"headerlink\" title=\"1.4.1.2.1.2. 增\"></a>1.4.1.2.1.2. 增</h6><pre><code>MongoClient.connect(dbUrl, (err, db) =&gt; {\n    if(!err) {\n        db.collection(&apos;goods&apos;).insertOne({\n            name: &apos;奖品&apos;, time: &apos;2015&apos;\n        }, (err, result) =&gt; {\n            if(!err) {\n                console.log(result);\n            }else {\n                console.log(&apos;插入失败&apos;);\n            }\n            // 操作完毕后调用close方法结束数据库连接以释放内存资源\n            db.close();\n        });\n    }\n}\n</code></pre><h6 id=\"1-4-1-2-1-3-删\"><a href=\"#1-4-1-2-1-3-删\" class=\"headerlink\" title=\"1.4.1.2.1.3. 删\"></a>1.4.1.2.1.3. 删</h6><pre><code>MongoClient.connect(dbUrl, (err, db) =&gt; {\n    if(!err) {\n        db.collection(&apos;goods&apos;).remove({\n            &apos;time&apos;: &apos;2015&apos;\n        }, (err, result) =&gt; {\n            if(!err) {\n                console.log(result);\n            }else {\n                console.log(&apos;删除失败&apos;);\n            }\n            // 操作完毕后调用close方法结束数据库连接以释放内存资源\n            db.close();\n        });\n    }\n};\n</code></pre><h6 id=\"1-4-1-2-1-4-查\"><a href=\"#1-4-1-2-1-4-查\" class=\"headerlink\" title=\"1.4.1.2.1.4. 查\"></a>1.4.1.2.1.4. 查</h6><pre><code>MongoClient.connect(dbUrl, (err, db) =&gt; {\n    if(!err) {\n        db.collection(&apos;goods&apos;).find()\n        .toArray(function(err, result) {\n            if(!err) {\n                console.log(result);\n            }else {\n                console.log(&apos;搜索失败&apos;);\n                console.log(result);\n            }\n            // 操作完毕后最好调用close方法结束数据库连接以释放内存资源\n            db.close();\n        });\n    }\n};\n</code></pre><h6 id=\"1-4-1-2-1-5-改\"><a href=\"#1-4-1-2-1-5-改\" class=\"headerlink\" title=\"1.4.1.2.1.5. 改\"></a>1.4.1.2.1.5. 改</h6><pre><code>MongoClient.connect(dbUrl, (err, db) =&gt; {\n    if(!err) {\n        db.collection(&apos;students&apos;).update({\n            gender: &apos;女&apos;\n        },{\n            $set: { age: 18 }\n        }, (err, result) =&gt; {\n            if(err) {\n                console.log(&apos;修改失败&apos;);\n            }else {\n                console.log(&apos;修改成功&apos;);\n            }\n            // 操作完毕后最好调用close方法结束数据库连接以释放内存资源\n            db.close();\n        });\n    }\n};\n</code></pre><h2 id=\"1-5-常用方法\"><a href=\"#1-5-常用方法\" class=\"headerlink\" title=\"1.5. 常用方法\"></a>1.5. 常用方法</h2><h3 id=\"1-5-1-数据库实例\"><a href=\"#1-5-1-数据库实例\" class=\"headerlink\" title=\"1.5.1. 数据库实例\"></a>1.5.1. 数据库实例</h3><p>删除数据库自己<br>db.dropDatabase()<br>获取指定集合实例<br>db.collection(集合名称)</p>\n<h4 id=\"1-5-1-1-集合实例\"><a href=\"#1-5-1-1-集合实例\" class=\"headerlink\" title=\"1.5.1.1. 集合实例\"></a>1.5.1.1. 集合实例</h4><p>删除集合自己<br>collection.drop()<br>插入数据<br>collection.insert(内容)<br>collection.insertOne(一条内容)<br>collection.insertMany(多条内容)<br>删除数据<br>collection.remove(条件, 是否只删除一条)<br>查找数据<br>collection.find(条件, isOne)<br>修改数据<br>collection.update(条件, 新值, 没有匹配是否新增, 是否更新多条数据)</p>\n<h2 id=\"1-6-条件查询\"><a href=\"#1-6-条件查询\" class=\"headerlink\" title=\"1.6. 条件查询\"></a>1.6. 条件查询</h2><h3 id=\"1-6-1-含义\"><a href=\"#1-6-1-含义\" class=\"headerlink\" title=\"1.6.1. 含义\"></a>1.6.1. 含义</h3><p>(&gt;) 大于 - $gt (greater then)<br>(&lt;) 小于 - $lt (less then)<br>(&gt;=) 大于等于 - $gte (greater then or equal)<br>(&lt;= ) 小于等于 - $lte (less then or equal)<br>(!=) 不等于 - $ne (not equal)</p>\n<h4 id=\"1-6-1-1-范例\"><a href=\"#1-6-1-1-范例\" class=\"headerlink\" title=\"1.6.1.1. 范例\"></a>1.6.1.1. 范例</h4><p>查询价格大于100的商品<br>db.store.find({price: {$gt: 100}})<br>查询价格小于100的商品<br>db.store.find({price: {$lt: 100}})<br>查询价格大于等于100的商品<br>db.store.find({price: {$gte: 100}})<br>查询价格小于等于100的商品<br>db.store.find({price: {$lte: 100}})<br>查询价格等于100的商品<br>db.store.find({price: 100})<br>查询价格不等于100的商品<br>db.store.find({price: {$ne: 100}})</p>\n<h2 id=\"1-7-查询结果处理\"><a href=\"#1-7-查询结果处理\" class=\"headerlink\" title=\"1.7. 查询结果处理\"></a>1.7. 查询结果处理</h2><h3 id=\"1-7-1-指定起始位置与数量\"><a href=\"#1-7-1-指定起始位置与数量\" class=\"headerlink\" title=\"1.7.1. 指定起始位置与数量\"></a>1.7.1. 指定起始位置与数量</h3><p>获取下标2之后的数据<br>db.store.find().skip(2)<br>获取前2条数据<br>db.store.find().limit(2)<br>获取下标2之后的2条数据<br>db.store.find().skip(2).limit(2)</p>\n<h4 id=\"1-7-1-1-排序\"><a href=\"#1-7-1-1-排序\" class=\"headerlink\" title=\"1.7.1.1. 排序\"></a>1.7.1.1. 排序</h4><p>以price字段做升序排序<br>db.store.find().sort({price: 1})<br>以price字段做降序排序<br>db.store.find().sort({price: -1})<br>注：这里必须是正1与负1</p>\n<h4 id=\"1-7-1-2-结果数量\"><a href=\"#1-7-1-2-结果数量\" class=\"headerlink\" title=\"1.7.1.2. 结果数量\"></a>1.7.1.2. 结果数量</h4><p>获取价格大于100的商品数量<br>db.store.find({price: { $gt: 100 }}).count()</p>\n","categories":[],"tags":[]},{"title":"about","url":"http://dantefung.com/about/index.html","content":"","categories":[],"tags":[]},{"title":"link","url":"http://dantefung.com/link/index.html","content":"","categories":[],"tags":[]},{"title":"category","url":"http://dantefung.com/category/index.html","content":"","categories":[],"tags":[]},{"title":"tag","url":"http://dantefung.com/tag/index.html","content":"","categories":[],"tags":[]},{"title":"search","url":"http://dantefung.com/search/index.html","content":"","categories":[],"tags":[]},{"title":"project","url":"http://dantefung.com/project/index.html","content":"","categories":[],"tags":[]}]